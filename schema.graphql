### This file was generated by Nexus Schema
### Do not make changes to this file directly

scalar DateTime

type Genre {
    id: Int!
    name: String!
}

interface IFetch {
    backdrop_path: String
    genres: [Genre]
    id: Int!
    overview: String
    poster_path: String
    title: String!
    vote_average: Float!
}

type MovieFetch implements IFetch {
    backdrop_path: String
    genres: [Genre]
    id: Int!
    overview: String
    poster_path: String
    release_date: String!
    title: String!
    vote_average: Float!
}

type Network {
    id: Int!
    logo_path: String
    name: String!
}

type Profile {
    bio: String
    email: String
    id: Int!
    user: User!
    userId: Int!
}

type Query {
    ok: Boolean!
}

type Review {
    content: String!
    createdAt: DateTime!
    id: Int!
    movieTitle: String!
    posterPath: String!
    rating: Float!
    title: String!
    updatedAt: DateTime!
    writer: User!
    writerId: Int!
}

input ReviewWhereUniqueInput {
    id: Int
}

type ShowFetch implements IFetch {
    backdrop_path: String
    first_air_date: String!
    genres: [Genre]
    id: Int!
    networks: Network
    overview: String
    poster_path: String
    title: String!
    vote_average: Float!
}

enum Social {
    GITHUB
    GOOGLE
}

type User {
    id: Int!
    login: String
    name: String!
    profile: Profile
    reviews(after: ReviewWhereUniqueInput, before: ReviewWhereUniqueInput, first: Int, last: Int): [Review!]!
    social: Social!
    token: String
}
